[
  {
    "objectID": "docs/tutorials/installation.html",
    "href": "docs/tutorials/installation.html",
    "title": "Installing the package",
    "section": "",
    "text": "Currently, the census21api package is only installable through GitHub. We also require Python 3.8 or higher."
  },
  {
    "objectID": "docs/tutorials/installation.html#installing-from-github-via-pip",
    "href": "docs/tutorials/installation.html#installing-from-github-via-pip",
    "title": "Installing the package",
    "section": "Installing from GitHub via pip",
    "text": "Installing from GitHub via pip\nTo install from GitHub via pip, use the following command:\n$ python -m pip install census21api@git+https://github.com/datasciencecampus/census21api"
  },
  {
    "objectID": "docs/tutorials/installation.html#installing-from-source",
    "href": "docs/tutorials/installation.html#installing-from-source",
    "title": "Installing the package",
    "section": "Installing from source",
    "text": "Installing from source\nIf you would prefer to install directly from source, use the following commands:\n$ git clone https://github.com/datasciencecampus/census21api.git\n$ cd census21api\n$ python -m pip install ."
  },
  {
    "objectID": "docs/tutorials/installation.html#installing-to-contribute",
    "href": "docs/tutorials/installation.html#installing-to-contribute",
    "title": "Installing the package",
    "section": "Installing to contribute",
    "text": "Installing to contribute\nIf you intend on doing any sort of development on census21api - like writing documentation or implementing a new feature - it is highly recommended to install from source as editable and with the development dependencies.\nTo do so, make a fork of the repository and then run the following:\n$ git clone https://github.com/&lt;your-username&gt;/census21api.git\n$ cd census21api\n$ python -m pip install -e \".[dev]\""
  },
  {
    "objectID": "docs/tutorials/getting-started.html",
    "href": "docs/tutorials/getting-started.html",
    "title": "Getting started",
    "section": "",
    "text": "In this tutorial, we go over the sort of interaction a user will usually have with the package: querying the API for some metadata and a getting a table."
  },
  {
    "objectID": "docs/tutorials/getting-started.html#making-a-connection",
    "href": "docs/tutorials/getting-started.html#making-a-connection",
    "title": "Getting started",
    "section": "Making a connection",
    "text": "Making a connection\nWe begin by importing the CensusAPI class from the package and creating an instance of it. This class is how we connect to the custom table creator API.\n\nfrom census21api import CensusAPI\n\napi = CensusAPI()"
  },
  {
    "objectID": "docs/tutorials/getting-started.html#defining-a-query",
    "href": "docs/tutorials/getting-started.html#defining-a-query",
    "title": "Getting started",
    "section": "Defining a query",
    "text": "Defining a query\nTo query a table, we need to identify our population type, area type, and dimensions to form our query parameters.\nLet’s say we want the counts for different levels of deprivation between the sexes at a national level. Deprivation statistics are recorded at the household level.\nSo, our parameters are:\n\npopulation type: usual residents in households\narea type: national\ndimensions: sex and deprivation"
  },
  {
    "objectID": "docs/tutorials/getting-started.html#finding-column-names",
    "href": "docs/tutorials/getting-started.html#finding-column-names",
    "title": "Getting started",
    "section": "Finding column names",
    "text": "Finding column names\nThere are a few columns relating to deprivation in the API.\nWe could go through the dictionary census21api.constants.DIMENSIONS_BY_POPULATION_TYPE to look for the relevant ones, but they might not be all that descriptive.\nInstead, we can retrieve the information from the API:\n\npopulation_type = \"UR_HH\"\n\nmetadata = api.query_feature(population_type, \"dimensions\")\nmetadata[metadata[\"id\"].str.contains(\"deprivation\")]\n\n\n\n\n\n\n\n\nid\nlabel\ndescription\ntotal_count\nquality_statement_text\npopulation_type\n\n\n\n\n21\nhh_deprivation\nHousehold deprivation (6 categories)\nThe dimensions of deprivation used to classify...\n6\nCaution should be used in interpreting this va...\nUR_HH\n\n\n22\nhh_deprivation_education\nHousehold deprived in the education dimension ...\nA household is classified as deprived in the e...\n3\n\nUR_HH\n\n\n23\nhh_deprivation_employment\nHousehold deprived in the employment dimension...\nA household is classified as deprived in the e...\n3\n\nUR_HH\n\n\n24\nhh_deprivation_health\nHousehold deprived in the health and disabilit...\nA household is classified as deprived in the h...\n3\n\nUR_HH\n\n\n25\nhh_deprivation_housing\nHousehold deprived in the housing dimension (3...\nA household is classified as deprived in the h...\n3\n\nUR_HH\n\n\n\n\n\n\n\nAfter inspecting this data frame, it looks like hh_deprivation suits our purposes - it’s an aggregate count of all the deprivation indicators."
  },
  {
    "objectID": "docs/tutorials/getting-started.html#retrieving-a-table",
    "href": "docs/tutorials/getting-started.html#retrieving-a-table",
    "title": "Getting started",
    "section": "Retrieving a table",
    "text": "Retrieving a table\nWith that information, we can use our CensusAPI instance to retrieve the corresponding table from the API using its query_table() method:\n\narea_type = \"nat\"\ndimensions = (\"sex\", \"hh_deprivation\")\n\ntable = api.query_table(population_type, area_type, dimensions, use_id=False)\ntable\n\n\n\n\n\n\n\n\nnat\nsex\nhh_deprivation\ncount\npopulation_type\n\n\n\n\n0\nEngland and Wales\nFemale\nDoes not apply\n0\nUR_HH\n\n\n1\nEngland and Wales\nFemale\nHousehold is not deprived in any dimension\n14536007\nUR_HH\n\n\n2\nEngland and Wales\nFemale\nHousehold is deprived in one dimension\n9928414\nUR_HH\n\n\n3\nEngland and Wales\nFemale\nHousehold is deprived in two dimensions\n4269937\nUR_HH\n\n\n4\nEngland and Wales\nFemale\nHousehold is deprived in three dimensions\n1087182\nUR_HH\n\n\n5\nEngland and Wales\nFemale\nHousehold is deprived in four dimensions\n70177\nUR_HH\n\n\n6\nEngland and Wales\nMale\nDoes not apply\n0\nUR_HH\n\n\n7\nEngland and Wales\nMale\nHousehold is not deprived in any dimension\n14375435\nUR_HH\n\n\n8\nEngland and Wales\nMale\nHousehold is deprived in one dimension\n9265887\nUR_HH\n\n\n9\nEngland and Wales\nMale\nHousehold is deprived in two dimensions\n3854022\nUR_HH\n\n\n10\nEngland and Wales\nMale\nHousehold is deprived in three dimensions\n1089564\nUR_HH\n\n\n11\nEngland and Wales\nMale\nHousehold is deprived in four dimensions\n79227\nUR_HH\n\n\n\n\n\n\n\nAnd we’re done - we have retrieved our table and we can go on to analyse it in whichever way we see fit."
  },
  {
    "objectID": "docs/how-to-guides/query-table.html",
    "href": "docs/how-to-guides/query-table.html",
    "title": "Querying a table",
    "section": "",
    "text": "To retrieve a table from the Census API, you need three things:"
  },
  {
    "objectID": "docs/how-to-guides/query-table.html#retrieving-a-table",
    "href": "docs/how-to-guides/query-table.html#retrieving-a-table",
    "title": "Querying a table",
    "section": "Retrieving a table",
    "text": "Retrieving a table\nWith those selected, we can use the CensusAPI.query_table() method to get our table:\n\nfrom census21api import CensusAPI\n\napi = CensusAPI()\n\npopulation_type = \"HRP\"\narea_type = \"ctry\"\ndimensions = (\"sex\", \"hh_tenure_9a\")\n\napi.query_table(population_type, area_type, dimensions)\n\n\n\n\n\n\n\n\nctry\nsex\nhh_tenure_9a\ncount\npopulation_type\n\n\n\n\n0\nE92000001\n1\n-8\n0\nHRP\n\n\n1\nE92000001\n1\n0\n3276595\nHRP\n\n\n2\nE92000001\n1\n1\n2178228\nHRP\n\n\n3\nE92000001\n1\n2\n109635\nHRP\n\n\n4\nE92000001\n1\n3\n1064598\nHRP\n\n\n5\nE92000001\n1\n4\n1108579\nHRP\n\n\n6\nE92000001\n1\n5\n1785514\nHRP\n\n\n7\nE92000001\n1\n6\n210267\nHRP\n\n\n8\nE92000001\n1\n7\n17429\nHRP\n\n\n9\nE92000001\n2\n-8\n0\nHRP\n\n\n10\nE92000001\n2\n0\n4348098\nHRP\n\n\n11\nE92000001\n2\n1\n4566144\nHRP\n\n\n12\nE92000001\n2\n2\n126316\nHRP\n\n\n13\nE92000001\n2\n3\n880554\nHRP\n\n\n14\nE92000001\n2\n4\n951932\nHRP\n\n\n15\nE92000001\n2\n5\n2488175\nHRP\n\n\n16\nE92000001\n2\n6\n310933\nHRP\n\n\n17\nE92000001\n2\n7\n13088\nHRP\n\n\n18\nW92000004\n1\n-8\n0\nHRP\n\n\n19\nW92000004\n1\n0\n219732\nHRP\n\n\n20\nW92000004\n1\n1\n129053\nHRP\n\n\n21\nW92000004\n1\n2\n2020\nHRP\n\n\n22\nW92000004\n1\n3\n66360\nHRP\n\n\n23\nW92000004\n1\n4\n56478\nHRP\n\n\n24\nW92000004\n1\n5\n87615\nHRP\n\n\n25\nW92000004\n1\n6\n14552\nHRP\n\n\n26\nW92000004\n1\n7\n1247\nHRP\n\n\n27\nW92000004\n2\n-8\n0\nHRP\n\n\n28\nW92000004\n2\n0\n292357\nHRP\n\n\n29\nW92000004\n2\n1\n248774\nHRP\n\n\n30\nW92000004\n2\n2\n2263\nHRP\n\n\n31\nW92000004\n2\n3\n50277\nHRP\n\n\n32\nW92000004\n2\n4\n48978\nHRP\n\n\n33\nW92000004\n2\n5\n107229\nHRP\n\n\n34\nW92000004\n2\n6\n19245\nHRP\n\n\n35\nW92000004\n2\n7\n933\nHRP"
  },
  {
    "objectID": "docs/how-to-guides/query-table.html#retrieving-labelled-data",
    "href": "docs/how-to-guides/query-table.html#retrieving-labelled-data",
    "title": "Querying a table",
    "section": "Retrieving labelled data",
    "text": "Retrieving labelled data\nSometimes the encoded data can be a bit opaque. If you would prefer to use the labels for the area type and dimensions, use the use_id argument:\n\napi.query_table(population_type, area_type, dimensions, use_id=False)\n\n\n\n\n\n\n\n\nctry\nsex\nhh_tenure_9a\ncount\npopulation_type\n\n\n\n\n0\nEngland\nFemale\nDoes not apply\n0\nHRP\n\n\n1\nEngland\nFemale\nOwned: Owns outright\n3276595\nHRP\n\n\n2\nEngland\nFemale\nOwned: Owns with a mortgage or loan\n2178228\nHRP\n\n\n3\nEngland\nFemale\nShared ownership: Shared ownership\n109635\nHRP\n\n\n4\nEngland\nFemale\nSocial rented: Rents from council or Local Aut...\n1064598\nHRP\n\n\n5\nEngland\nFemale\nSocial rented: Other social rented\n1108579\nHRP\n\n\n6\nEngland\nFemale\nPrivate rented: Private landlord or letting ag...\n1785514\nHRP\n\n\n7\nEngland\nFemale\nPrivate rented: Other private rented\n210267\nHRP\n\n\n8\nEngland\nFemale\nLives rent free\n17429\nHRP\n\n\n9\nEngland\nMale\nDoes not apply\n0\nHRP\n\n\n10\nEngland\nMale\nOwned: Owns outright\n4348098\nHRP\n\n\n11\nEngland\nMale\nOwned: Owns with a mortgage or loan\n4566144\nHRP\n\n\n12\nEngland\nMale\nShared ownership: Shared ownership\n126316\nHRP\n\n\n13\nEngland\nMale\nSocial rented: Rents from council or Local Aut...\n880554\nHRP\n\n\n14\nEngland\nMale\nSocial rented: Other social rented\n951932\nHRP\n\n\n15\nEngland\nMale\nPrivate rented: Private landlord or letting ag...\n2488175\nHRP\n\n\n16\nEngland\nMale\nPrivate rented: Other private rented\n310933\nHRP\n\n\n17\nEngland\nMale\nLives rent free\n13088\nHRP\n\n\n18\nWales\nFemale\nDoes not apply\n0\nHRP\n\n\n19\nWales\nFemale\nOwned: Owns outright\n219732\nHRP\n\n\n20\nWales\nFemale\nOwned: Owns with a mortgage or loan\n129053\nHRP\n\n\n21\nWales\nFemale\nShared ownership: Shared ownership\n2020\nHRP\n\n\n22\nWales\nFemale\nSocial rented: Rents from council or Local Aut...\n66360\nHRP\n\n\n23\nWales\nFemale\nSocial rented: Other social rented\n56478\nHRP\n\n\n24\nWales\nFemale\nPrivate rented: Private landlord or letting ag...\n87615\nHRP\n\n\n25\nWales\nFemale\nPrivate rented: Other private rented\n14552\nHRP\n\n\n26\nWales\nFemale\nLives rent free\n1247\nHRP\n\n\n27\nWales\nMale\nDoes not apply\n0\nHRP\n\n\n28\nWales\nMale\nOwned: Owns outright\n292357\nHRP\n\n\n29\nWales\nMale\nOwned: Owns with a mortgage or loan\n248774\nHRP\n\n\n30\nWales\nMale\nShared ownership: Shared ownership\n2263\nHRP\n\n\n31\nWales\nMale\nSocial rented: Rents from council or Local Aut...\n50277\nHRP\n\n\n32\nWales\nMale\nSocial rented: Other social rented\n48978\nHRP\n\n\n33\nWales\nMale\nPrivate rented: Private landlord or letting ag...\n107229\nHRP\n\n\n34\nWales\nMale\nPrivate rented: Other private rented\n19245\nHRP\n\n\n35\nWales\nMale\nLives rent free\n933\nHRP"
  },
  {
    "objectID": "docs/how-to-guides/query-population-types.html",
    "href": "docs/how-to-guides/query-population-types.html",
    "title": "Querying population types",
    "section": "",
    "text": "The API has many endpoints. One of them returns information about the population types available to users. This guide demonstrates how to get those metadata with census21api."
  },
  {
    "objectID": "docs/how-to-guides/query-population-types.html#getting-all-types",
    "href": "docs/how-to-guides/query-population-types.html#getting-all-types",
    "title": "Querying population types",
    "section": "Getting all types",
    "text": "Getting all types\nWe can retrieve population type metadata with the CensusAPI.query_population_types() method like so:\n\nfrom census21api import CensusAPI\n\napi = CensusAPI()\napi.query_population_types()\n\n\n\n\n\n\n\n\nname\nlabel\ndescription\ntype\n\n\n\n\n0\nHH\nAll households\nEither one usual resident living alone or a gr...\nmicrodata\n\n\n1\nHRP\nAll Household Reference Persons\nA person who serves as a reference point, main...\nmicrodata\n\n\n2\nUR\nAll usual residents\nThe main population base for census statistics...\nmicrodata\n\n\n3\nUR_CE\nAll usual residents in communal establishments\nA usual resident who lives in a place that pro...\nmicrodata\n\n\n4\nUR_HH\nAll usual residents in households\nA person who usually lives in England or Wales...\nmicrodata\n\n\n\n\n\n\n\nThis data frame contains the code, full name, description, and type of every population type exposed through the API.\n\n\n\n\n\n\nNote\n\n\n\nNote that every population type has type microdata; these are the only population types we can query for tables. The API exposes many more but they are not currently usable by census21api."
  },
  {
    "objectID": "docs/how-to-guides/query-population-types.html#filtering-for-specific-populations",
    "href": "docs/how-to-guides/query-population-types.html#filtering-for-specific-populations",
    "title": "Querying population types",
    "section": "Filtering for specific populations",
    "text": "Filtering for specific populations\nYou can also specify to only see some population types when you call the population querist by listing their codes as arguments:\n\napi.query_population_types(\"UR\", \"UR_CE\", \"UR_HH\")\n\n\n\n\n\n\n\n\nname\nlabel\ndescription\ntype\n\n\n\n\n0\nUR\nAll usual residents\nThe main population base for census statistics...\nmicrodata\n\n\n1\nUR_CE\nAll usual residents in communal establishments\nA usual resident who lives in a place that pro...\nmicrodata\n\n\n2\nUR_HH\nAll usual residents in households\nA person who usually lives in England or Wales...\nmicrodata"
  },
  {
    "objectID": "docs/reference/index.html",
    "href": "docs/reference/index.html",
    "title": "Reference",
    "section": "",
    "text": "This section of the documentation covers the reference material for census21api. According to the Diátaxis framework, reference guides are:\n\ntechnical descriptions of the machinery and how to operate it. Reference material is information-oriented.\n\nRight now, the only reference material we need our API reference, which contains the technical details of the core CensusAPI class and its methods.\nWe automatically generate this reference material using quartodoc.\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nDescription\n\n\n\n\n\n\nAPI reference\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "docs/reference/api/index.html",
    "href": "docs/reference/api/index.html",
    "title": "API reference",
    "section": "",
    "text": "Core class for connecting to the Census API\n\n\n\nCensusAPI\nA wrapper for the 2021 England and Wales Census API."
  },
  {
    "objectID": "docs/reference/api/index.html#censusapi",
    "href": "docs/reference/api/index.html#censusapi",
    "title": "API reference",
    "section": "",
    "text": "Core class for connecting to the Census API\n\n\n\nCensusAPI\nA wrapper for the 2021 England and Wales Census API."
  },
  {
    "objectID": "index.html#what-is-this-and-why-does-it-exist",
    "href": "index.html#what-is-this-and-why-does-it-exist",
    "title": "Welcome to the census21api documentation!",
    "section": "What is this and why does it exist?",
    "text": "What is this and why does it exist?\nThis package, census21api, is the (unofficial) Python interface to the “Create a Custom Dataset” web tool for the 2021 England and Wales Census.\nThe primary goal of this project is to streamline the process of accessing and working with data from the 2021 England and Wales Census API. With census21api, you can create pretty much any Census tables you like in a programmatic way."
  },
  {
    "objectID": "index.html#who-made-this",
    "href": "index.html#who-made-this",
    "title": "Welcome to the census21api documentation!",
    "section": "Who made this?",
    "text": "Who made this?\nThe package and its documentation were developed by the 2023 cohort of Office for National Statistics data engineering and architecture apprentices – with support from the Data Science Campus.\nSee our citation file for a list of the original authors or our GitHub repository for all the contributors."
  },
  {
    "objectID": "index.html#where-do-i-go-now",
    "href": "index.html#where-do-i-go-now",
    "title": "Welcome to the census21api documentation!",
    "section": "Where do I go now?",
    "text": "Where do I go now?\nOur documentation follows the Diátaxis framework and is split into the following sections:\n\nTutorials are walkthroughs of projects using census21api — if you’re new, start here.\nHow-to guides are short guides with a very specific goal in mind.\nReference holds the technical documentation covering the details of how census21api works."
  },
  {
    "objectID": "CHANGES.html",
    "href": "CHANGES.html",
    "title": "Change log",
    "section": "",
    "text": "First release. See README for details on installation and use."
  },
  {
    "objectID": "CHANGES.html#section",
    "href": "CHANGES.html#section",
    "title": "Change log",
    "section": "",
    "text": "First release. See README for details on installation and use."
  },
  {
    "objectID": "docs/reference/api/CensusAPI.html",
    "href": "docs/reference/api/CensusAPI.html",
    "title": "CensusAPI",
    "section": "",
    "text": "wrapper.CensusAPI()\nA wrapper for the 2021 England and Wales Census API.\n\n\n\n\n\nName\nDescription\n\n\n\n\nget\nMake a call to, and retrieve some data from, the API.\n\n\nquery_categories\nQuery metadata on the categories of a particular feature item.\n\n\nquery_feature\nQuery metadata on a feature for a population type.\n\n\nquery_population_types\nQuery the metadata for a set of population types.\n\n\nquery_table\nQuery a custom table from the API.\n\n\n\n\n\nwrapper.CensusAPI.get(url)\nMake a call to, and retrieve some data from, the API.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nurl\nstr\nURL from which to retrieve data.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\ndict or None\nJSON data from the response of this API call if it is successful, and None otherwise.\n\n\n\n\n\n\n\nwrapper.CensusAPI.query_categories(population_type, feature, item)\nQuery metadata on the categories of a particular feature item.\nThis method connects to different endpoints depending on feature:\n\n/{population_type}/area-types/{item}/areas\n/{population_type}/dimensions/{item}/categorisations\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npopulation_type\nstr\nPopulation type to query.\nrequired\n\n\nfeature\n(area - types, dimensions)\nEndpoint of the feature to query.\n\"area-types\"\n\n\nitem\nstr\nID of the item in the feature to query.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\npandas.pandas.DataFrame or None\nMetadata on the categories for the feature item if the call succeeds, and None if not.\n\n\n\n\n\n\n\nwrapper.CensusAPI.query_feature(population_type, feature, *items)\nQuery metadata on a feature for a population type.\nThis method connects to the area-types and dimensions endpoints (ie. /{population_type}/{endpoint}) and returns a data frame format of the metadata there.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npopulation_type\nstr\nPopulation type to query.\nrequired\n\n\nfeature\n(area - types, dimensions)\nEndpoint of the feature to query.\n\"area-types\"\n\n\n*items\nstr\nItems to query from the endpoint. If not specified, return all items at the endpoint. For dimensions, see census21api.constants.DIMENSIONS_BY_POPULATION_TYPE, and census21api.constants.AREA_TYPES_BY_POPULATION_TYPE for area types.\n()\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\npandas.pandas.DataFrame or None\nData frame with the metadata if the call succeeds, and None if not.\n\n\n\n\n\n\n\nwrapper.CensusAPI.query_population_types(*population_types)\nQuery the metadata for a set of population types.\nThis method finds all available population types and retrieves their metadata from the population-types endpoint, returning the combined information as a data frame.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npopulation_types\nstr\nPopulation types to be queried. If not specified, metadata on all the population types are returned. See census21api.constants.POPULATION_TYPES.\n()\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\npandas.pandas.DataFrame or None\nData frame with all the population type metadata. If none of the API calls are successful, returns None.\n\n\n\n\n\n\n\nwrapper.CensusAPI.query_table(population_type, area_type, dimensions, use_id=True)\nQuery a custom table from the API.\nThis method connects to the census-observations endpoint /{population_type}/census-observations with query parameters ?area-type={area_type}&dimensions={','.join(dimensions)}.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npopulation_type\nstr\nPopulation type to query. See census21api.constants.POPULATION_TYPES.\nrequired\n\n\narea_type\nstr\nArea type to query. See census21api.constants.AREA_TYPES_BY_POPULATION_TYPE.\nrequired\n\n\ndimensions\nlist of str\nDimensions to query. See census21api.constants.DIMENSIONS_BY_POPULATION_TYPE.\nrequired\n\n\nuse_id\nbool\nIf True (the default) use the ID for each dimension and area type. Otherwise, use the full label.\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\npandas.pandas.DataFrame or None\nData frame containing the data from the API call if it is successful and without blocked pairs, and None otherwise."
  },
  {
    "objectID": "docs/reference/api/CensusAPI.html#methods",
    "href": "docs/reference/api/CensusAPI.html#methods",
    "title": "CensusAPI",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nget\nMake a call to, and retrieve some data from, the API.\n\n\nquery_categories\nQuery metadata on the categories of a particular feature item.\n\n\nquery_feature\nQuery metadata on a feature for a population type.\n\n\nquery_population_types\nQuery the metadata for a set of population types.\n\n\nquery_table\nQuery a custom table from the API.\n\n\n\n\n\nwrapper.CensusAPI.get(url)\nMake a call to, and retrieve some data from, the API.\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nurl\nstr\nURL from which to retrieve data.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\ndict or None\nJSON data from the response of this API call if it is successful, and None otherwise.\n\n\n\n\n\n\n\nwrapper.CensusAPI.query_categories(population_type, feature, item)\nQuery metadata on the categories of a particular feature item.\nThis method connects to different endpoints depending on feature:\n\n/{population_type}/area-types/{item}/areas\n/{population_type}/dimensions/{item}/categorisations\n\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npopulation_type\nstr\nPopulation type to query.\nrequired\n\n\nfeature\n(area - types, dimensions)\nEndpoint of the feature to query.\n\"area-types\"\n\n\nitem\nstr\nID of the item in the feature to query.\nrequired\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\npandas.pandas.DataFrame or None\nMetadata on the categories for the feature item if the call succeeds, and None if not.\n\n\n\n\n\n\n\nwrapper.CensusAPI.query_feature(population_type, feature, *items)\nQuery metadata on a feature for a population type.\nThis method connects to the area-types and dimensions endpoints (ie. /{population_type}/{endpoint}) and returns a data frame format of the metadata there.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npopulation_type\nstr\nPopulation type to query.\nrequired\n\n\nfeature\n(area - types, dimensions)\nEndpoint of the feature to query.\n\"area-types\"\n\n\n*items\nstr\nItems to query from the endpoint. If not specified, return all items at the endpoint. For dimensions, see census21api.constants.DIMENSIONS_BY_POPULATION_TYPE, and census21api.constants.AREA_TYPES_BY_POPULATION_TYPE for area types.\n()\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\npandas.pandas.DataFrame or None\nData frame with the metadata if the call succeeds, and None if not.\n\n\n\n\n\n\n\nwrapper.CensusAPI.query_population_types(*population_types)\nQuery the metadata for a set of population types.\nThis method finds all available population types and retrieves their metadata from the population-types endpoint, returning the combined information as a data frame.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npopulation_types\nstr\nPopulation types to be queried. If not specified, metadata on all the population types are returned. See census21api.constants.POPULATION_TYPES.\n()\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\npandas.pandas.DataFrame or None\nData frame with all the population type metadata. If none of the API calls are successful, returns None.\n\n\n\n\n\n\n\nwrapper.CensusAPI.query_table(population_type, area_type, dimensions, use_id=True)\nQuery a custom table from the API.\nThis method connects to the census-observations endpoint /{population_type}/census-observations with query parameters ?area-type={area_type}&dimensions={','.join(dimensions)}.\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\npopulation_type\nstr\nPopulation type to query. See census21api.constants.POPULATION_TYPES.\nrequired\n\n\narea_type\nstr\nArea type to query. See census21api.constants.AREA_TYPES_BY_POPULATION_TYPE.\nrequired\n\n\ndimensions\nlist of str\nDimensions to query. See census21api.constants.DIMENSIONS_BY_POPULATION_TYPE.\nrequired\n\n\nuse_id\nbool\nIf True (the default) use the ID for each dimension and area type. Otherwise, use the full label.\nTrue\n\n\n\n\n\n\n\n\n\n\n\n\n\nType\nDescription\n\n\n\n\npandas.pandas.DataFrame or None\nData frame containing the data from the API call if it is successful and without blocked pairs, and None otherwise."
  },
  {
    "objectID": "docs/how-to-guides/query-categories.html",
    "href": "docs/how-to-guides/query-categories.html",
    "title": "Querying feature item categories",
    "section": "",
    "text": "Some of the features (area types and dimensions) for a population type may be unfamiliar or difficult to understand. This guide shows you how to get metadata on an item from a feature."
  },
  {
    "objectID": "docs/how-to-guides/query-categories.html#querying-a-dimensions-categorisations",
    "href": "docs/how-to-guides/query-categories.html#querying-a-dimensions-categorisations",
    "title": "Querying feature item categories",
    "section": "Querying a dimension’s categorisations",
    "text": "Querying a dimension’s categorisations\nTo do this for a given dimension, pass your population type and item to the CensusAPI.query_categories() method.\n\nfrom census21api import CensusAPI\n\napi = CensusAPI()\n\npopulation_type = \"UR_HH\"\nfeature = \"dimensions\"\nitem = \"health_in_general\"\n\napi.query_categories(population_type, feature, item)\n\n\n\n\n\n\n\n\nid\nlabel\ndimension\npopulation_type\n\n\n\n\n0\n-8\nDoes not apply\nhealth_in_general\nUR_HH\n\n\n1\n1\nVery good health\nhealth_in_general\nUR_HH\n\n\n2\n2\nGood health\nhealth_in_general\nUR_HH\n\n\n3\n3\nFair health\nhealth_in_general\nUR_HH\n\n\n4\n4\nBad health\nhealth_in_general\nUR_HH\n\n\n5\n5\nVery bad health\nhealth_in_general\nUR_HH"
  },
  {
    "objectID": "docs/how-to-guides/query-categories.html#querying-an-area-types-areas",
    "href": "docs/how-to-guides/query-categories.html#querying-an-area-types-areas",
    "title": "Querying feature item categories",
    "section": "Querying an area type’s areas",
    "text": "Querying an area type’s areas\nYou can use the same method to query category metadata for area types:\n\nfeature = \"area-types\"\nitem = \"msoa\"\n\napi.query_categories(population_type, feature, item)\n\n\n\n\n\n\n\n\nid\nlabel\narea_type\npopulation_type\n\n\n\n\n0\nE02000001\nCity of London 001\nmsoa\nUR_HH\n\n\n1\nE02000002\nBarking and Dagenham 001\nmsoa\nUR_HH\n\n\n2\nE02000003\nBarking and Dagenham 002\nmsoa\nUR_HH\n\n\n3\nE02000004\nBarking and Dagenham 003\nmsoa\nUR_HH\n\n\n4\nE02000005\nBarking and Dagenham 004\nmsoa\nUR_HH\n\n\n...\n...\n...\n...\n...\n\n\n7259\nW02000424\nWrexham 021\nmsoa\nUR_HH\n\n\n7260\nW02000425\nWrexham 022\nmsoa\nUR_HH\n\n\n7261\nW02000426\nWrexham 023\nmsoa\nUR_HH\n\n\n7262\nW02000427\nNeath Port Talbot 021\nmsoa\nUR_HH\n\n\n7263\nW02000428\nSwansea 032\nmsoa\nUR_HH\n\n\n\n\n7264 rows × 4 columns"
  },
  {
    "objectID": "docs/how-to-guides/index.html",
    "href": "docs/how-to-guides/index.html",
    "title": "How-to guides",
    "section": "",
    "text": "This section of the documentation comprises bite-size, task-oriented guides on how to make different queries using census21api.\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nDescription\n\n\n\n\n\n\n\nQuerying a table\n\n\nHow to retrieve a custom table from the\n\n\n\n\nQuerying feature item categories\n\n\nHow to query metadata on a particular feature item\n\n\n\n\nQuerying feature metadata\n\n\nHow to retrieve metadata on area types and dimensions\n\n\n\n\nQuerying population types\n\n\nHow to retrieve metadata on population types\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "docs/how-to-guides/query-feature.html",
    "href": "docs/how-to-guides/query-feature.html",
    "title": "Querying feature metadata",
    "section": "",
    "text": "Two parameters you have to set to query a table from the API are an area type and some dimensions. In census21api, we call these parameters “features”. This guide shows you how to get metadata on each of these features with census21api using the CensusAPI.query_feature() method."
  },
  {
    "objectID": "docs/how-to-guides/query-feature.html#getting-area-types",
    "href": "docs/how-to-guides/query-feature.html#getting-area-types",
    "title": "Querying feature metadata",
    "section": "Getting area types",
    "text": "Getting area types\nGiven a population type, we use households (HH) here, we can retrieve area type metadata like so:\n\nfrom census21api import CensusAPI\n\napi = CensusAPI()\n\npopulation_type = \"HH\"\napi.query_feature(population_type, \"area-types\")\n\n\n\n\n\n\n\n\nid\nlabel\ndescription\ntotal_count\nhierarchy_order\npopulation_type\n\n\n\n\n0\nnat\nEngland and Wales\nData for both England and Wales.\n1\n1400\nHH\n\n\n1\nctry\nCountries\nData for either the whole of England or Wales.\n2\n1300\nHH\n\n\n2\nrgn\nRegions\nData for the nine regions in England, and Wale...\n10\n1200\nHH\n\n\n3\nlep\nLocal enterprise partnerships\nLocal enterprise partnerships (LEPs) are volun...\n37\n1150\nHH\n\n\n4\nnhser\nNHS England regions\nEach NHS region is responsible for planning lo...\n8\n1100\nHH\n\n\n5\nlhb\nLocal health boards\nLocal health boards in Wales are responsible f...\n8\n1000\nHH\n\n\n6\nicb\nIntegrated care boards\nIntegrated care boards in England are responsi...\n43\n900\nHH\n\n\n7\nsicbl\nSub integrated care board locations\nSub integrated care board locations have repla...\n107\n800\nHH\n\n\n8\nutla23\n2023 Upper tier local authorities\nUpper tier local authorities provide a range o...\n175\n750\nHH\n\n\n9\nutla\nUpper tier local authorities\nUpper tier local authorities provide a range o...\n174\n700\nHH\n\n\n10\nltla23\n2023 Lower tier local authorities\nLower tier local authorities provide a range o...\n318\n650\nHH\n\n\n11\nltla\nLower tier local authorities\nLower tier local authorities provide a range o...\n331\n600\nHH\n\n\n12\nsenc\nSenedd constituencies\nAreas used to elect a member of the Senedd (MS...\n41\n550\nHH\n\n\n13\np19wpc\nPost-2019 Westminster Parliamentary constituen...\nAreas that will be used to elect members of pa...\n575\n525\nHH\n\n\n14\nsener\nSenedd electoral regions\nThere are five Senedd electoral regions each m...\n6\n520\nHH\n\n\n15\nwpc\nWestminster Parliamentary constituencies\nAreas used to elect a member of parliament (MP...\n573\n500\nHH\n\n\n16\nwd\nElectoral wards and divisions\nAreas used to elect local authority councillor...\n7638\n400\nHH\n\n\n17\nmsoa\nMiddle layer Super Output Areas\nMiddle layer Super Output Areas (MSOAs) are ma...\n7264\n300\nHH\n\n\n18\nlsoa\nLower layer Super Output Areas\nLower layer Super Output Areas (LSOAs) are mad...\n35672\n200\nHH\n\n\n19\noa\nOutput Areas\nThe lowest level of geographical area for cens...\n188880\n100\nHH\n\n\n\n\n\n\n\nThis data frame contains lots of information about the available area types for our population type:\n\nid: the code for the area type\nlabel: its full name\ndescription: a description of the area type\ntotal_count: the number of categories in the area type\nhierarchy_order: where the area type sits in the hierarchy of area types\npopulation_type: the population type you queried"
  },
  {
    "objectID": "docs/how-to-guides/query-feature.html#getting-dimensions",
    "href": "docs/how-to-guides/query-feature.html#getting-dimensions",
    "title": "Querying feature metadata",
    "section": "Getting dimensions",
    "text": "Getting dimensions\nWe can retrieve dimensions (features of the data) in a similar way:\n\napi.query_feature(population_type, \"dimensions\")\n\n\n\n\n\n\n\n\nid\nlabel\ndescription\ntotal_count\nquality_statement_text\npopulation_type\n\n\n\n\n0\naccommodation_type\nAccommodation type (8 categories)\nThe type of building or structure used or avai...\n8\nWe have made changes to housing definitions si...\nHH\n\n\n1\naccom_by_dwelling_type\nAccommodation by type of dwelling (9 categories)\nClassifies dwellings by their type of accommod...\n9\n\nHH\n\n\n2\nheating_type\nType of central heating in household (13 categ...\nCentral heating is a heating system used to he...\n13\n\nHH\n\n\n3\nhh_adults_and_children_11a\nAdults and children in household (11 categories)\nClassifies households by the age of the people...\n11\nWe have made methodological adjustments to the...\nHH\n\n\n4\nhh_adults_disabled_4a\nNumber of disabled adults in household (4 cate...\nThe number of adults in a household who assess...\n4\n\nHH\n\n\n5\nhh_adults_employment_5a\nNumber of adults in employment in household (5...\nThe number of employed adults in a household.\\...\n5\nAs Census 2021 was during a unique period of r...\nHH\n\n\n6\nhh_adults_num_3a\nNumber of adults in household (3 categories)\nAn adult in a household is any person who is n...\n3\n\nHH\n\n\n7\nhh_adult_welsh_speakers\nWelsh-speaking people in household (5 categories)\nClassifies households by the ability of people...\n5\n\nHH\n\n\n8\nhh_away_student_4a\nHouseholds with students or schoolchildren liv...\nThis measures households where resident studen...\n4\n\nHH\n\n\n9\nhh_carers_6a\nNumber of unpaid carers in household (6 catego...\nAn unpaid carer may look after, give help or s...\n6\nWe did not ask people aged under five years wh...\nHH\n\n\n10\nhh_dependent_children_3a\nDependent children in household and their age ...\nClassifies the number of dependent children in...\n3\n\nHH\n\n\n11\nhh_deprivation\nHousehold deprivation (6 categories)\nThe dimensions of deprivation used to classify...\n6\nCaution should be used in interpreting this va...\nHH\n\n\n12\nhh_deprivation_education\nHousehold deprived in the education dimension ...\nA household is classified as deprived in the e...\n3\n\nHH\n\n\n13\nhh_deprivation_employment\nHousehold deprived in the employment dimension...\nA household is classified as deprived in the e...\n3\n\nHH\n\n\n14\nhh_deprivation_health\nHousehold deprived in the health and disabilit...\nA household is classified as deprived in the h...\n3\n\nHH\n\n\n15\nhh_deprivation_housing\nHousehold deprived in the housing dimension (3...\nA household is classified as deprived in the h...\n3\n\nHH\n\n\n16\nhh_disabled_4a\nNumber of disabled people in household (4 cate...\nThe number of people in a household who assess...\n4\n\nHH\n\n\n17\nhh_families_count\nNumber of families in household (7 categories)\nNumber of families in household.\n7\n\nHH\n\n\n18\nhh_families_type_12a\nHousehold type (12 categories)\nClassifies households in an alternative way to...\n12\n\nHH\n\n\n19\nhh_family_composition_37a\nHousehold composition (37 categories)\nHouseholds according to the relationships betw...\n37\nThere are quality considerations around consis...\nHH\n\n\n20\nhh_hrp_veteran\nHousehold Reference Person previously served i...\nIdentifies whether the Household Reference Per...\n5\nTake care when comparing characteristics of UK...\nHH\n\n\n21\nhh_language\nHousehold language (English and Welsh) (5 cate...\nClassifies households by the combination of ad...\n5\n\nHH\n\n\n22\nhh_lifestage_13a\nLifestage of Household Reference Person(13 cat...\nHousehold lifestage classifies households acco...\n13\n\nHH\n\n\n23\nhh_multi_ethnic_combination_8a\nCombination of ethnic groups in household (8 c...\nClassifies households by whether household mem...\n8\n\nHH\n\n\n24\nhh_multi_ethnic_group\nMultiple ethnic groups in household (6 categor...\nClassifies households by whether members ident...\n6\n\nHH\n\n\n25\nhh_multi_language\nMultiple main languages in household (6 catego...\nClassifies households by whether members speak...\n6\n\nHH\n\n\n26\nhh_multi_religion\nMultiple religions in household (10 categories)\nClassifies households by whether members ident...\n10\n\nHH\n\n\n27\nhh_multi_religion_combination\nCombination of religions in household (15 cate...\nClassifies households by the religious affilia...\n15\n\nHH\n\n\n28\nhh_not_limited_4a\nNumber of people in household with a long-term...\nThe number of people in the household who asse...\n4\n\nHH\n\n\n29\nhh_no_condition_4a\nNumber of people in household with no long-ter...\nThe number of people in the household who asse...\n4\n\nHH\n\n\n30\nhh_number_limited_little_4a\nNumber of disabled people in household whose d...\nThe number of people in the household who have...\n4\n\nHH\n\n\n31\nhh_number_limited_lot_4a\nNumber of disabled people in household whose d...\nThe number of people in the household who have...\n4\n\nHH\n\n\n32\nhh_persons_per_bedroom\nNumber of people per bedroom in household (5 c...\nThe number of household members is divided by ...\n5\n\nHH\n\n\n33\nhh_persons_per_room\nNumber of people per room in household (5 cate...\nThe number of household members is divided by ...\n5\nIt is inappropriate to measure change in numbe...\nHH\n\n\n34\nhh_size_9a\nHousehold size (9 categories)\nThe number of people in the household.\\n\\nVisi...\n9\n\nHH\n\n\n35\nhh_tenure_9a\nTenure of household (9 categories)\nWhether a household owns or rents the accommod...\n9\nThere is evidence of people incorrectly identi...\nHH\n\n\n36\nhh_veterans_5a\nNumber of people in household who previously s...\nNumber of people in the household who have pre...\n5\nTake care when comparing characteristics of UK...\nHH\n\n\n37\nhh_welsh_speaking_adults_3a\nWelsh-speaking adults in household (3 categories)\nNumber of adults (aged 16 years and over) who ...\n3\n\nHH\n\n\n38\nhh_welsh_speak_3_plus_8a\nWelsh-speakers in household (8 categories)\nNumber of people (aged 3 years and over) who c...\n8\n\nHH\n\n\n39\nnumber_bedrooms_6a\nNumber of Bedrooms (6 categories)\nThe number of bedrooms in a household’s accomm...\n6\n\nHH\n\n\n40\nnumber_of_cars_6a\nCar or van availability (6 categories)\nThe number of cars or vans owned or available ...\n6\n\nHH\n\n\n41\noccupancy_rating_bedrooms_6a\nOccupancy rating for bedrooms (6 categories)\nWhether a household's accommodation is overcro...\n6\n\nHH\n\n\n42\noccupancy_rating_rooms_6a\nOccupancy rating for rooms (6 categories)\nWhether a household's accommodation is overcro...\n6\nIt is inappropriate to measure change in numbe...\nHH\n\n\n43\nvoa_number_of_rooms_9a\nNumber of rooms (Valuation Office Agency) (9 c...\nA room can be any room in a dwelling apart fro...\n9\nIt is inappropriate to measure change in numbe...\nHH\n\n\n44\nworkers_transport\nNumber of people who work in household and the...\nThis groups the number of people who work in a...\n18\nAs Census 2021 was during a unique period of r...\nHH\n\n\n\n\n\n\n\nThis data frame contains much of the same information as the area type metadata. However, it replaces hierarchy_order with quality_statement_text, which contains any information users should consider when interpreting data involving that dimension."
  },
  {
    "objectID": "docs/how-to-guides/query-feature.html#filtering-for-items-in-a-feature",
    "href": "docs/how-to-guides/query-feature.html#filtering-for-items-in-a-feature",
    "title": "Querying feature metadata",
    "section": "Filtering for items in a feature",
    "text": "Filtering for items in a feature\nYou can also specify to only see some items in a feature by passing the item codes as arguments. For instance, let’s filter down our area types to only see the Output Areas:\n\napi.query_feature(population_type, \"area-types\", \"msoa\", \"lsoa\", \"oa\")\n\n\n\n\n\n\n\n\nid\nlabel\ndescription\ntotal_count\nhierarchy_order\npopulation_type\n\n\n\n\n0\nmsoa\nMiddle layer Super Output Areas\nMiddle layer Super Output Areas (MSOAs) are ma...\n7264\n300\nHH\n\n\n1\nlsoa\nLower layer Super Output Areas\nLower layer Super Output Areas (LSOAs) are mad...\n35672\n200\nHH\n\n\n2\noa\nOutput Areas\nThe lowest level of geographical area for cens...\n188880\n100\nHH"
  },
  {
    "objectID": "docs/tutorials/index.html",
    "href": "docs/tutorials/index.html",
    "title": "Tutorials",
    "section": "",
    "text": "In these tutorials, we walk you through some small projects using census21api. The purpose of this section of the documentation is for you to learn how to use the package for your own projects. For closer details of the package’s innards, see the Reference material.\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nDescription\n\n\n\n\n\n\nInstalling the package\n\n\nInstructions for the various ways you can install the census21api package \n\n\n\n\nGetting started\n\n\nA typical workflow of retrieving some metadata and a table from the API \n\n\n\n\n\n\nNo matching items"
  }
]